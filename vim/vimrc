filetype off

call plug#begin('~/.vim/plugged')
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'Yggdroot/indentLine'
Plug 'editorconfig/editorconfig-vim'
Plug 'jiangmiao/auto-pairs'
Plug 'tomtom/tcomment_vim'
Plug 'easymotion/vim-easymotion'
Plug 'junegunn/fzf', {'dir': '~/.fzf', 'do': './install --all'}
Plug 'junegunn/fzf.vim'
Plug 'posva/vim-vue'
Plug 'mattn/emmet-vim'
Plug 'tpope/vim-surround'
Plug 'gregsexton/matchtag'
Plug 'tpope/vim-repeat'
Plug 'lilydjwg/colorizer'
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'tomtom/tlib_vim'
Plug 'nvie/vim-flake8'
Plug 'bkad/CamelCaseMotion'
call plug#end()

set rtp+=~/.fzf

set nocompatible

"general settings
filetype plugin on
filetype indent on

syntax on
" Encoding
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8
set bomb
set binary
set ttyfast

" Fix backspace indent
set backspace=indent,eol,start

" Tabs
set tabstop=4
set softtabstop=4
set shiftwidth=4
set shiftround
set smarttab
set expandtab
set autoindent

" Searching
set incsearch
set hlsearch
set ic
set smartcase

" Directories for wap files
set nobackup
set noswapfile

set showcmd
set clipboard=unnamed
set number
set cursorline
set ruler
set t_Co=256
set pastetoggle=<F9>

augroup vueSyntax
    autocmd!
    " autocmd BufRead,BufNewFile *.vue set filetype=html
    autocmd BufEnter * :syntax sync fromstart
augroup END

if exists('$TMUX')
    let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
    let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
    let &t_SI = "\<Esc>]50;CursorShape=1\x7"
    let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

"airline{
    set laststatus=2
    let g:airline_theme='term'
"}

"t-comment{
    map <c-/> <c-_>
    map <c-b> <c-_>b
"}

"indentLine{
    let g:indentLine_concealcursor = 'inc'
    let g:indentLine_conceallevel = 2
"}

"learder{
    let mapleader=","
    let g:mapleader=","
"}

"emmet {
    " let g:user_emmet_expandabbr_key = "<Tab>"
    autocmd FileType vue,html imap <expr> <tab> emmet#expandAbbrIntelligent("\<tab>")
"}

"ultisnips {
    let g:UltiSnipsExpandTrigger="<c-]>"
    let g:UltiSnipsJumpForwardTrigger="<c-k>"
    let g:UltiSnipsJumpBackwardTrigger="<c-j>"
"}

"CamelCaseMotion {
    map <silent> w <Plug>CamelCaseMotion_w
    map <silent> b <Plug>CamelCaseMotion_b
    map <silent> e <Plug>CamelCaseMotion_e
    map <silent> ge <Plug>CamelCaseMotion_ge
    omap <silent> iw <Plug>CamelCaseMotion_iw
    xmap <silent> iw <Plug>CamelCaseMotion_iw
    omap <silent> ib <Plug>CamelCaseMotion_ib
    xmap <silent> ib <Plug>CamelCaseMotion_ib
    omap <silent> ie <Plug>CamelCaseMotion_ie
    xmap <silent> ie <Plug>CamelCaseMotion_ie
    sunmap w
    sunmap b
    sunmap e
    sunmap ge
"}

"use j and k choose complete
inoremap <expr> j pumvisible() ? '<C-n>' : 'j'
inoremap <expr> k pumvisible() ? '<C-p>' : 'k'

" setting
so ~/.vim/settings.vim
